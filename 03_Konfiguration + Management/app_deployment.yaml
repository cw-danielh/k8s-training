apiVersion: apps/v1
kind: Deployment
metadata:
  name: ???                                     # Deployment Name
spec:
  selector:
    matchLabels:
      app: hello-kubernetes
  replicas: 1
  template:
    metadata:
      labels:
        app: hello-kubernetes                    # Labels die sp√§ter auf dem Pod gesetzt werden 
    spec:
      volumes:
      - name: ???                                # Name des Volumes. Auf diesen Namen kann im Abschnitt VolumeMount verwiesen werden
        persistentVolumeClaim:
         claimName: ???                          # Verweis auf einen Persistent Volume Claim. Der name dazu ist im pvc.yaml zu finden
      - name: hello-conf
        configMap:
          name: ???                              # Name der ConfigMap die in configmap.yaml definiert wird.
      containers:
      - name: hello-kubernetes
        image: europe-west4-docker.pkg.dev/cw-daniel-sandbox/k8s-training/hello-kubernetes:v7
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        env:
        - name: PORT
          value: "8080"
        - name: KUBERNETES_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: IMAGE
          value: "kubernetes.png"
        - name: MESSAGE
          value: "Hello PVC Test Deployment"
        volumeMounts:
        - name: ???                            # Verweis auf das oben beschriebene und entsprechend benannte PersistentVolume
          mountPath: ???                       # Pfad an dem das persistent Volume eingebunden wird. Zum Beispiel /mnt/hello
        - name: ???                            # Verweis auf die oben benannte ConfigMap als Volume
          mountPath: /usr/local/test.conf      # Pfad an dem der Inhalt der Config Map (SubPath) gemounted wird
          subPath: ???                         # Element aus Configmap im Datei Format
        resources:
          requests:
            cpu: "100m" 
          limits:
            cpu: "250m"
            memory: "250Mi"
